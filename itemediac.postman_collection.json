{
	"info": {
		"_postman_id": "b25fe8f4-5413-41f2-a65f-b4c08328636d",
		"name": "itemediac",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Secret token not empty\", function () {",
											"    var jsonData = pm.response.json();",
											"    var secret = jsonData.data.secret.length;",
											"    pm.expect(secret > 0).to.eql(true);",
											"});",
											"",
											"const jsonData = pm.response.json();",
											"pm.environment.set(\"secret_token\", jsonData.data.secret);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "uname",
											"value": "irwancom",
											"type": "text"
										},
										{
											"key": "paswd",
											"value": "123",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/oauth/oauth",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"oauth",
										"oauth"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "Dashboard",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/dashboard",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"dashboard"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "List User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/user",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Store User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"user_email\", \"user\" + random + '@local.host');",
											"pm.environment.set(\"user_phone\", \"08700000\" +random);",
											"pm.environment.set(\"user_username\", \"username-\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id user\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_auth_user);",
											"",
											"    pm.environment.set(\"user_id\", jsonData.data.id_auth_user);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var email = pm.variables.get(\"user_email\");",
											"    var phone = pm.variables.get(\"user_phone\");",
											"    var username = pm.variables.get(\"user_username\");",
											"",
											"    pm.expect(jsonData.data.email).to.eql(email);",
											"    pm.expect(jsonData.data.phone).to.eql(phone);",
											"    pm.expect(jsonData.data.uname).to.eql(username);",
											"",
											"    var pass = (typeof jsonData.data.paswd === \"undefined\")",
											"    pm.expect(pass).to.eql(true);",
											"",
											"    var secret = (typeof jsonData.data.secret === \"undefined\")",
											"    pm.expect(secret).to.eql(true);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "{{user_email}}",
											"type": "text"
										},
										{
											"key": "phone",
											"value": "{{user_phone}}",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{user_username}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Random Name",
											"type": "text"
										},
										{
											"key": "password",
											"value": "random",
											"type": "text"
										},
										{
											"key": "password_confirm",
											"value": "random",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/user",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/user/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"user_email\", \"user\" + random + '@local.host');",
											"pm.environment.set(\"user_phone\", \"08700000\" +random);",
											"pm.environment.set(\"user_username\", \"username-\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id user\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.user.id_auth_user);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var email = pm.variables.get(\"user_email\");",
											"    var phone = pm.variables.get(\"user_phone\");",
											"    var username = pm.variables.get(\"user_username\");",
											"",
											"    pm.expect(jsonData.data.user.email).to.eql(email);",
											"    pm.expect(jsonData.data.user.phone).to.eql(phone);",
											"    pm.expect(jsonData.data.user.uname).to.eql(username);",
											"",
											"    var pass = (typeof jsonData.data.user.paswd === \"undefined\")",
											"    pm.expect(pass).to.eql(true);",
											"",
											"    var secret = (typeof jsonData.data.user.secret === \"undefined\")",
											"    pm.expect(secret).to.eql(true);",
											"",
											"    pm.expect(jsonData.data.success).to.eql(true);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "{{user_email}}",
											"type": "text"
										},
										{
											"key": "phone",
											"value": "{{user_phone}}",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{user_username}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Random Name",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/user/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Account Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully udpate Account Type\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_type",
											"value": "2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/user/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/user/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Warehouse",
					"item": [
						{
							"name": "Store Warehouse",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "province_id",
											"value": "6",
											"type": "text"
										},
										{
											"key": "province_name",
											"value": "DKI Jakarta",
											"type": "text"
										},
										{
											"key": "city_id",
											"value": "42",
											"type": "text"
										},
										{
											"key": "city_name",
											"value": "Jakarta Barat",
											"type": "text"
										},
										{
											"key": "suburb_id",
											"value": "497",
											"type": "text"
										},
										{
											"key": "suburb_name",
											"value": "Grogol Petamburan",
											"type": "text"
										},
										{
											"key": "area_id",
											"value": "4803",
											"type": "text"
										},
										{
											"key": "area_name",
											"value": "Grogol - 11450",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Warehouse Grogol",
											"type": "text"
										},
										{
											"key": "address",
											"value": "Bukan Alamat",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/user_warehouse/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user_warehouse",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Warehouse",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Update warehouse Grogol",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/user_warehouse/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user_warehouse",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Warehouse",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/user_warehouse/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user_warehouse",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Warehouse",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/user_warehouse",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"user_warehouse"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "FlashSale",
					"item": [
						{
							"name": "List FlashSale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"    console.log(data.hasOwnProperty('length'))",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/flashsale?start_time=2020-07-01 00:00:00&end_time=2020-07-15 23:59:00",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"flashsale"
									],
									"query": [
										{
											"key": "start_time",
											"value": "2020-07-01 00:00:00",
											"description": "default is current datetime"
										},
										{
											"key": "end_time",
											"value": "2020-07-15 23:59:00"
										},
										{
											"key": "per_page",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Store FlashSale",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"discount_title\", \"title-\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id flashsale\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_flash_sale);",
											"",
											"    pm.environment.set(\"flashsale_id\", jsonData.data.id_flash_sale);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_product_detail",
											"value": "1",
											"type": "text"
										},
										{
											"key": "start_time",
											"value": "2020-07-07 00:00:00",
											"type": "text"
										},
										{
											"key": "end_time",
											"value": "2020-07-10 00:00:00",
											"type": "text"
										},
										{
											"key": "min_qty",
											"value": "1",
											"description": "Minimal Quantity",
											"type": "text"
										},
										{
											"key": "max_qty",
											"value": "2",
											"description": "Maximal Quantity",
											"type": "text"
										},
										{
											"key": "discount_type",
											"value": "1",
											"description": "1 = decimal, 2 = percent",
											"type": "text"
										},
										{
											"key": "discount_value",
											"value": "1000",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/flashsale",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"flashsale"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail FlashSale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id flashsale\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_flash_sale);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/flashsale/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"flashsale",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update FlashSale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id flashsale\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_flash_sale);",
											"",
											"    pm.environment.set(\"flashsale_id\", jsonData.data.id_flash_sale);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.id_product_detail).to.eql('2');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_product_detail",
											"value": "2",
											"type": "text"
										},
										{
											"key": "start_time",
											"value": "2020-07-07 00:00:00",
											"type": "text"
										},
										{
											"key": "end_time",
											"value": "2020-07-10 00:00:00",
											"type": "text"
										},
										{
											"key": "min_qty",
											"value": "1",
											"type": "text"
										},
										{
											"key": "max_qty",
											"value": "3",
											"type": "text"
										},
										{
											"key": "discount_type",
											"value": "2",
											"type": "text"
										},
										{
											"key": "discount_value",
											"value": "10",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/flashsale/{{flashsale_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"flashsale",
										"{{flashsale_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete FlashSale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/flashsale/{{flashsale_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"flashsale",
										"{{flashsale_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Discount Product",
					"item": [
						{
							"name": "List Discount Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/discount_product?start_time=0000-00-00 00:00:00&end_time=5000-01-01 00:00:00",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount_product"
									],
									"query": [
										{
											"key": "start_time",
											"value": "0000-00-00 00:00:00"
										},
										{
											"key": "end_time",
											"value": "5000-01-01 00:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Discount Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    pm.expect(isObject).to.eql(true);",
											"    ",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_product_detail",
											"value": "2",
											"type": "text"
										},
										{
											"key": "id_discount",
											"value": "3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/discount_product",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Discount Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{base_url}}/admin/discount_product/{{product_detail_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount_product",
										"{{product_detail_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Discount",
					"item": [
						{
							"name": "List Discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/discount?start_time=0000-00-00 00:00:00",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount"
									],
									"query": [
										{
											"key": "start_time",
											"value": "0000-00-00 00:00:00",
											"description": "default is current datetime"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Discount",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"discount_title\", \"title-\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Discount\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_discount);",
											"",
											"    pm.environment.set(\"discount_id\", jsonData.data.id_discount);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var title = pm.variables.get(\"discount_title\");",
											"    pm.expect(jsonData.data.title).to.eql(title);",
											"",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "{{discount_title}}",
											"type": "text"
										},
										{
											"key": "discount_type",
											"value": "1",
											"description": "1 = percent, 2 = nominal",
											"type": "text"
										},
										{
											"key": "discount_value",
											"value": "10",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										},
										{
											"key": "desc",
											"value": "asdsada",
											"type": "text"
										},
										{
											"key": "min_qty",
											"value": "1",
											"type": "text"
										},
										{
											"key": "max_qty",
											"value": "2",
											"type": "text"
										},
										{
											"key": "start_time",
											"value": "2020-01-01 00:00:00",
											"type": "text"
										},
										{
											"key": "end_time",
											"value": "2020-01-01 00:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/discount",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id discount\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_discount);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    var title = pm.environment.get('discount_title');",
											"    pm.expect(jsonData.data.title).to.eql(title);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/discount/{{discount_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount",
										"{{discount_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Discount",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"discount_title\", \"title-\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Discount\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_discount);",
											"",
											"    pm.environment.set(\"discount_id\", jsonData.data.id_discount);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var title = pm.variables.get(\"discount_title\");",
											"    pm.expect(jsonData.data.title).to.eql(title);",
											"    pm.expect(parseInt(jsonData.data.discount_type)).to.eql(2);",
											"    pm.expect(parseFloat(jsonData.data.discount_value)).to.eql(20000);",
											"",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "{{discount_title}}",
											"type": "text"
										},
										{
											"key": "discount_type",
											"value": "1",
											"description": "1 = percent,  2 = nominal",
											"type": "text"
										},
										{
											"key": "discount_value",
											"value": "-1",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										},
										{
											"key": "desc",
											"value": "asdsada",
											"type": "text"
										},
										{
											"key": "min_qty",
											"value": "1",
											"type": "text"
										},
										{
											"key": "max_qty",
											"value": "2",
											"type": "text"
										},
										{
											"key": "start_time",
											"value": "2020-01-01 00:00:00",
											"type": "text"
										},
										{
											"key": "end_time",
											"value": "2020-01-01 00:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/discount/{{discount_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount",
										"{{discount_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/discount/{{discount_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"discount",
										"{{discount_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Newsletter",
					"item": [
						{
							"name": "List Letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/newsletter",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"newsletter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Letter\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_letter);",
											"",
											"    pm.environment.set(\"newsletter_id\", jsonData.data.id_letter);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var title = pm.variables.get(\"newsletter_title\");",
											"    pm.expect(jsonData.data.title).to.eql(title);",
											"",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"newsletter_title\", \"title-\" + random);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "content",
											"value": "<p>testing</p>",
											"type": "text"
										},
										{
											"key": "title",
											"value": "{{newsletter_title}}",
											"type": "text"
										},
										{
											"key": "sent_time",
											"value": "2021-07-07 00:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/newsletter",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"newsletter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id letter\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_letter);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    var title = pm.environment.get('newsletter_title');",
											"    pm.expect(jsonData.data.title).to.eql(title);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/newsletter/{{newsletter_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"newsletter",
										"{{newsletter_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Letter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"newsletter_title\", \"title-\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id letter\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_letter);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    var title = pm.environment.get('newsletter_title');",
											"    pm.expect(jsonData.data.title).to.eql(title);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "{{newsletter_title}}",
											"type": "text"
										},
										{
											"key": "content",
											"value": "12131",
											"type": "text"
										},
										{
											"key": "status",
											"value": "2",
											"description": "0 = waiting, 1 = success, 2 = failed",
											"type": "text",
											"disabled": true
										},
										{
											"key": "sent_time",
											"value": "2022-07-07 00:00:00",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/newsletter/{{newsletter_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"newsletter",
										"{{newsletter_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/newsletter/{{newsletter_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"newsletter",
										"{{newsletter_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Category",
					"item": [
						{
							"name": "List Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/category",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category"
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Category\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_category);",
											"",
											"    pm.environment.set(\"category_id\", jsonData.data.id_category);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var name = pm.environment.get(\"category_name\");",
											"    name = name.toUpperCase()",
											"    pm.expect(jsonData.data.category_name).to.eql(name);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"category_name\", \"name-\" + random);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "category_name",
											"value": "{{category_name}}",
											"type": "text"
										},
										{
											"key": "id_parent",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/category",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Category\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_category);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var name = pm.environment.get(\"category_name\");",
											"    name = name.toUpperCase()",
											"    pm.expect(jsonData.data.category_name).to.eql(name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/category/{{category_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category",
										"{{category_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var name = pm.environment.get(\"category_name\");",
											"    name = name.toUpperCase()",
											"    pm.expect(jsonData.data.category_name).to.eql(name);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 1000) +1;",
											"",
											"pm.environment.set(\"category_name\", \"name-\" + random);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "category_name",
											"value": "{{category_name}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/category/{{category_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category",
										"{{category_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/category/{{category_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category",
										"{{category_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Status",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/category/{{category_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category",
										"{{category_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": "/tmp/bintang.jpg"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/category/{{category_id}}/add_image",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category",
										"{{category_id}}",
										"add_image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Image Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/category/{{category_id}}/remove_image",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"category",
										"{{category_id}}",
										"remove_image"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "List Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product?sorted=created_at.desc&perPage=4&page=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product"
									],
									"query": [
										{
											"key": "sorted",
											"value": "created_at.desc"
										},
										{
											"key": "id_category",
											"value": "1",
											"disabled": true
										},
										{
											"key": "q",
											"value": "KALIA",
											"disabled": true
										},
										{
											"key": "deleted",
											"value": "1",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "4",
											"description": "limit."
										},
										{
											"key": "page",
											"value": "0",
											"description": "offset. jika 0 atau 1 akan dianggap 0 (start data dari 0)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product);",
											"",
											"    pm.environment.set(\"product_id\", jsonData.data.id_product);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var name = pm.environment.get(\"product_name\");",
											"    pm.expect(jsonData.data.product_name).to.eql(name);",
											"",
											"    var sku = pm.environment.get(\"product_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku).to.eql(sku);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"product_name\", \"name-\" + random);",
											"pm.environment.set(\"product_sku\", \"prod\" + random);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_name",
											"value": "{{product_name}}",
											"type": "text"
										},
										{
											"key": "id_category",
											"value": "1",
											"type": "text"
										},
										{
											"key": "sku",
											"value": "{{product_sku}}",
											"type": "text"
										},
										{
											"key": "desc",
											"value": "1231321",
											"type": "text"
										},
										{
											"key": "weight",
											"value": "4.2",
											"type": "text"
										},
										{
											"key": "height",
											"value": "",
											"type": "text"
										},
										{
											"key": "width",
											"value": "",
											"type": "text"
										},
										{
											"key": "length",
											"value": "",
											"type": "text"
										},
										{
											"key": "published",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var name = pm.environment.get(\"product_name\");",
											"    pm.expect(jsonData.data.product_name).to.eql(name);",
											"",
											"    var sku = pm.environment.get(\"product_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku).to.eql(sku);",
											"",
											"    pm.expect(typeof jsonData.data.details !== \"undefined\").to.eql(true)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"product_name\", \"name-\" + random);",
											"pm.environment.set(\"product_sku\", \"prod\" + random);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product);",
											"",
											"    pm.environment.set(\"product_id\", jsonData.data.id_product);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var name = pm.environment.get(\"product_name\");",
											"    pm.expect(jsonData.data.product_name).to.eql(name);",
											"",
											"    var sku = pm.environment.get(\"product_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku).to.eql(sku);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_name",
											"value": "{{product_name}}",
											"type": "text"
										},
										{
											"key": "sku",
											"value": "{{product_sku}}",
											"type": "text"
										},
										{
											"key": "id_category",
											"value": "1",
											"type": "text"
										},
										{
											"key": "published",
											"value": "1",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Image Product",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": "/C:/Users/MICHAEL/Downloads/20200603_072437 (1).jpg"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}/add_image",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}",
										"add_image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Product Image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "image_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}/remove_image",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}",
										"remove_image"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ProductDetail",
					"item": [
						{
							"name": "Store Product Item",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"product_detail_sku\", \"SKU\" + random);",
											"pm.environment.set(\"product_detail_price\", random * 1000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product_detail);",
											"",
											"    pm.environment.set(\"product_detail_id\", jsonData.data.id_product_detail);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var price = pm.environment.get(\"product_detail_price\");",
											"    pm.expect(jsonData.data.price).to.eql(`${price}`);",
											"",
											"    var sku = pm.environment.get(\"product_detail_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku_barcode).to.eql(sku);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "sku_code",
											"value": "{{product_detail_sku}}",
											"type": "text"
										},
										{
											"key": "price",
											"value": "{{product_detail_price}}",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "100",
											"type": "text"
										},
										{
											"key": "variable[COLOR]",
											"value": "RED",
											"type": "text"
										},
										{
											"key": "variable[SIZE]",
											"value": "L",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}/add_detail",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}",
										"add_detail"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Product Ready Stock",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"product_detail_sku\", \"SKU\" + random);",
											"pm.environment.set(\"product_detail_price\", random * 1000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product_detail);",
											"",
											"    pm.environment.set(\"product_detail_id\", jsonData.data.id_product_detail);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var price = pm.environment.get(\"product_detail_price\");",
											"    pm.expect(jsonData.data.price).to.eql(`${price}`);",
											"",
											"    var sku = pm.environment.get(\"product_detail_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku_barcode).to.eql(sku);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "sku_code",
											"value": "{{product_detail_sku}}",
											"type": "text"
										},
										{
											"key": "price",
											"value": "{{product_detail_price}}",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "100",
											"type": "text"
										},
										{
											"key": "variable[COLOR]",
											"value": "RED",
											"type": "text"
										},
										{
											"key": "variable[SIZE]",
											"value": "L",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product_detail?is_ready_stock=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product_detail"
									],
									"query": [
										{
											"key": "is_ready_stock",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Product Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product_detail);",
											"",
											"    pm.environment.set(\"product_detail_id\", jsonData.data.id_product_detail);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var price = pm.environment.get(\"product_detail_price\");",
											"    pm.expect(jsonData.data.price).to.eql(`${price}`);",
											"",
											"    var sku = pm.environment.get(\"product_detail_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku_barcode).to.eql(sku);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product_detail/{{product_id}}/details/{{product_detail_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product_detail",
										"{{product_id}}",
										"details",
										"{{product_detail_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Product Item",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var random = Math.floor(Math.random() * 100) +1;",
											"",
											"pm.environment.set(\"product_detail_sku\", \"sku\" + random);",
											"pm.environment.set(\"product_detail_price\", random * 1000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id Product\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_product_detail);",
											"",
											"    pm.environment.set(\"product_detail_id\", jsonData.data.id_product_detail);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare field\", function() {",
											"    var jsonData = pm.response.json();",
											"",
											"    var price = pm.environment.get(\"product_detail_price\");",
											"    pm.expect(jsonData.data.price).to.eql(`${price}`);",
											"",
											"    var sku = pm.environment.get(\"product_detail_sku\");",
											"    sku = sku.toUpperCase();",
											"    pm.expect(jsonData.data.sku_barcode).to.eql(sku);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "sku_code",
											"value": "{{product_detail_sku}}",
											"type": "text"
										},
										{
											"key": "price",
											"value": "{{product_detail_price}}",
											"type": "text"
										},
										{
											"key": "variable[COLOR]",
											"value": "PINK",
											"type": "text"
										},
										{
											"key": "variable[SIZE]",
											"value": "XXL",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "120",
											"type": "text"
										},
										{
											"key": "image_path",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product_detail/{{product_id}}/details/{{product_detail_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product_detail",
										"{{product_id}}",
										"details",
										"{{product_detail_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Product Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Successfully Delete\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.data.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}/details/{{product_detail_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}",
										"details",
										"{{product_detail_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Image Product Detail",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": "/C:/Users/MICHAEL/Downloads/20200603_072437 (1).jpg"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/product_detail/{{product_id}}/details/{{product_detail_id}}/add_image",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product_detail",
										"{{product_id}}",
										"details",
										"{{product_detail_id}}",
										"add_image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Product Detail Image",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product_detail/{{product_id}}/details/{{product_detail_id}}/remove_image",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product_detail",
										"{{product_id}}",
										"details",
										"{{product_detail_id}}",
										"remove_image"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Slider",
					"item": [
						{
							"name": "List Slider",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/slider?start_time=0000-00-00  00:00:00",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"slider"
									],
									"query": [
										{
											"key": "start_time",
											"value": "0000-00-00  00:00:00"
										},
										{
											"key": "end_time",
											"value": "2021-07-07 00:00:00",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"    pm.environment.set(\"slider_id\", jsonData.data.id_slider);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": "/home/tiduronline/Desktop/bintang.jpg"
										},
										{
											"key": "start_time",
											"value": "2020-01-01 00:00:00",
											"type": "text"
										},
										{
											"key": "end_time",
											"value": "2021-01-01 00:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/slider",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"slider"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Slider",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/slider/{{slider_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"slider",
										"{{slider_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order",
					"item": [
						{
							"name": "List Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order?orders-status=done&payments-xendit_status=PAID",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order"
									],
									"query": [
										{
											"key": "orders-status",
											"value": "done",
											"description": "waiting_payment, open, in_process, in_shipment, done, canceled"
										},
										{
											"key": "payments-xendit_status",
											"value": "PAID",
											"description": "PAID, PENDING"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id order\", function () {",
											"    var jsonData = pm.response.json();",
											"    var code = jsonData.data.order_code;",
											"    pm.expect(typeof code !== \"undefined\").to.eql(true);",
											"});",
											"",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.order_code).to.eql('ODR1231');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Order Detail",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order_detail/ODR1231/2",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order_detail",
										"ODR1231",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Shipping Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql('success');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "2",
											"description": "0 = gudang, 1 = pengiriman, 2 = sampai",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/ODR1231/shipping",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"ODR1231",
										"shipping"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Payment Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql('success');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "2",
											"description": "0 = cancel, 1 = pending, 2 = success, 3 = refund",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/5F15F3F23DC35/payment",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"5F15F3F23DC35",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update awb number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql('success');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "value",
											"value": "ABC123",
											"description": "0 = cancel, 1 = pending, 2 = success, 3 = refund",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/ODR1231/awb_code",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"ODR1231",
										"awb_code"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shipping Rate (Step 1)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "origin[id_warehouse]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "origin[province_id]",
											"value": "6",
											"type": "text"
										},
										{
											"key": "origin[province_name]",
											"value": "DKI Jakarta",
											"type": "text"
										},
										{
											"key": "origin[city_id]",
											"value": "42",
											"type": "text"
										},
										{
											"key": "origin[city_name]",
											"value": "Jakarta Barat",
											"type": "text"
										},
										{
											"key": "origin[suburb_id]",
											"value": "497",
											"type": "text"
										},
										{
											"key": "origin[suburb_name]",
											"value": "Grogol Petamburan",
											"type": "text"
										},
										{
											"key": "origin[area_id]",
											"value": "4803",
											"type": "text"
										},
										{
											"key": "origin[area_name]",
											"value": "Grogol - 11450",
											"type": "text"
										},
										{
											"key": "origin[name]",
											"value": "Warehouse Name",
											"type": "text"
										},
										{
											"key": "origin[address]",
											"value": "Warehouse Address",
											"type": "text"
										},
										{
											"key": "destination[id_member_address]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "destination[id_member]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "destination[province_id]",
											"value": "6",
											"type": "text"
										},
										{
											"key": "destination[province_name]",
											"value": "DKI Jakarta",
											"type": "text"
										},
										{
											"key": "destination[city_id]",
											"value": "41",
											"type": "text"
										},
										{
											"key": "destination[city_name]",
											"value": "Jakarta Selatan",
											"type": "text"
										},
										{
											"key": "destination[suburb_id]",
											"value": "491",
											"type": "text"
										},
										{
											"key": "destination[suburb_name]",
											"value": "Kebayoran Baru",
											"type": "text"
										},
										{
											"key": "destination[area_id]",
											"value": "4761",
											"type": "text"
										},
										{
											"key": "destination[area_name]",
											"value": "Senayan - 12190",
											"type": "text"
										},
										{
											"key": "destination[name]",
											"value": "Nama Saya",
											"type": "text"
										},
										{
											"key": "destination[address]",
											"value": "Jalan Panjang Sekali",
											"type": "text"
										},
										{
											"key": "destination[receiver_name]",
											"value": "Michael Chandra",
											"type": "text"
										},
										{
											"key": "destination[receiver_phone]",
											"value": "087824622895",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "",
											"type": "text"
										},
										{
											"key": "description",
											"value": "",
											"type": "text"
										},
										{
											"key": "voucher_code",
											"value": "",
											"type": "text"
										},
										{
											"key": "order_source",
											"value": "wa",
											"type": "text"
										},
										{
											"key": "cart[][id_product_detail]",
											"value": "14",
											"type": "text"
										},
										{
											"key": "cart[0][product_name]",
											"value": "item-1",
											"type": "text"
										},
										{
											"key": "cart[0][product_weight]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][product_height]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][product_width]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][product_length]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][discount_type]",
											"value": "",
											"type": "text"
										},
										{
											"key": "cart[0][discount_source]",
											"value": "",
											"type": "text"
										},
										{
											"key": "cart[0][discount_value]",
											"value": "",
											"type": "text"
										},
										{
											"key": "cart[0][price]",
											"value": "95000",
											"type": "text"
										},
										{
											"key": "cart[0][qty]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "cart[0][total]",
											"value": "95000",
											"type": "text"
										},
										{
											"key": "cart[0][description]",
											"value": "item description",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/shipping_rate",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"shipping_rate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Waiting Payment (Step 2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Order Response\", function () {",
											"    var jsonData = pm.response.json();",
											"    if (jsonData.id !== null) {",
											"        pm.environment.set('order_invoice_number', jsonData.data.order.invoice_number)",
											"        pm.environment.set(\"payment_id\", jsonData.data.payment.id);",
											"        pm.environment.set(\"payment_external_id\", jsonData.data.payment.external_id);",
											"        pm.environment.set(\"payment_amount\", jsonData.data.payment.amount)",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "origin[id_warehouse]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "origin[province_id]",
											"value": "6",
											"type": "text"
										},
										{
											"key": "origin[province_name]",
											"value": "DKI Jakarta",
											"type": "text"
										},
										{
											"key": "origin[city_id]",
											"value": "42",
											"type": "text"
										},
										{
											"key": "origin[city_name]",
											"value": "Jakarta Barat",
											"type": "text"
										},
										{
											"key": "origin[suburb_id]",
											"value": "497",
											"type": "text"
										},
										{
											"key": "origin[suburb_name]",
											"value": "Grogol Petamburan",
											"type": "text"
										},
										{
											"key": "origin[area_id]",
											"value": "4803",
											"type": "text"
										},
										{
											"key": "origin[area_name]",
											"value": "Grogol - 11450",
											"type": "text"
										},
										{
											"key": "origin[name]",
											"value": "Warehouse Name",
											"type": "text"
										},
										{
											"key": "origin[address]",
											"value": "Warehouse Address",
											"type": "text"
										},
										{
											"key": "destination[id_member_address]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "destination[id_member]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "destination[province_id]",
											"value": "6",
											"type": "text"
										},
										{
											"key": "destination[province_name]",
											"value": "DKI Jakarta",
											"type": "text"
										},
										{
											"key": "destination[city_id]",
											"value": "41",
											"type": "text"
										},
										{
											"key": "destination[city_name]",
											"value": "Jakarta Selatan",
											"type": "text"
										},
										{
											"key": "destination[suburb_id]",
											"value": "491",
											"type": "text"
										},
										{
											"key": "destination[suburb_name]",
											"value": "Kebayoran Baru",
											"type": "text"
										},
										{
											"key": "destination[area_id]",
											"value": "4761",
											"type": "text"
										},
										{
											"key": "destination[area_name]",
											"value": "Senayan - 12190",
											"type": "text"
										},
										{
											"key": "destination[name]",
											"value": "Nama Saya",
											"type": "text"
										},
										{
											"key": "destination[address]",
											"value": "Jalan Panjang Sekali",
											"type": "text"
										},
										{
											"key": "destination[receiver_name]",
											"value": "Michael Chandra",
											"type": "text"
										},
										{
											"key": "destination[receiver_phone]",
											"value": "087824622895",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "",
											"type": "text"
										},
										{
											"key": "description",
											"value": "",
											"type": "text"
										},
										{
											"key": "voucher_code",
											"value": "",
											"type": "text"
										},
										{
											"key": "order_source",
											"value": "wa",
											"type": "text"
										},
										{
											"key": "cart[][id_product_detail]",
											"value": "14",
											"type": "text"
										},
										{
											"key": "cart[0][product_name]",
											"value": "item-1",
											"type": "text"
										},
										{
											"key": "cart[0][product_weight]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][product_height]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][product_width]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][product_length]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "cart[0][discount_type]",
											"value": "",
											"type": "text"
										},
										{
											"key": "cart[0][discount_source]",
											"value": "",
											"type": "text"
										},
										{
											"key": "cart[0][discount_value]",
											"value": "",
											"type": "text"
										},
										{
											"key": "cart[0][price]",
											"value": "95000",
											"type": "text"
										},
										{
											"key": "cart[0][qty]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "cart[0][total]",
											"value": "95000",
											"type": "text"
										},
										{
											"key": "cart[0][description]",
											"value": "item description",
											"type": "text"
										},
										{
											"key": "shipping[shipper_use_insurance]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "shipping[shipper_name]",
											"value": "SAP",
											"type": "text"
										},
										{
											"key": "shipping[shipper_rate_id]",
											"value": "350",
											"type": "text"
										},
										{
											"key": "shipping[shipper_rate_name]",
											"value": "Day Service",
											"type": "text"
										},
										{
											"key": "shipping[shipper_final_rate]",
											"value": "27000",
											"type": "text"
										},
										{
											"key": "shipping[shipper_insurance_rate]",
											"value": "285",
											"type": "text"
										},
										{
											"key": "shipping[shipper_discount]",
											"value": "0",
											"type": "text"
										},
										{
											"key": "shipping[shipper_min_day]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "shipping[shipper_max_day]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_agent]",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/create_waiting_payment",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"create_waiting_payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Payment Callback (Step 3)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{payment_id}}\",\n    \"external_id\": \"{{payment_external_id}}\",\n    \"user_id\": \"5781d19b2e2385880609791c\",\n    \"is_high\": true,\n    \"payment_method\": \"BANK_TRANSFER\",\n    \"status\": \"PAID\",\n    \"merchant_name\": \"Xendit\",\n    \"amount\": {{payment_amount}},\n    \"paid_amount\": {{payment_amount}},\n    \"bank_code\": \"PERMATA\",\n    \"paid_at\": \"2016-10-12T08:15:03.404Z\",\n    \"payer_email\": \"wildan@xendit.co\",\n    \"description\": \"This is a description\",\n    \"adjusted_received_amount\": 47500,\n    \"fees_paid_amount\": 0,\n    \"updated\": \"2016-10-10T08:15:03.404Z\",\n    \"created\": \"2016-10-10T08:15:03.404Z\",\n    \"currency\": \"IDR\",\n    \"payment_channel\": \"PERMATA\",\n    \"payment_destination\": \"888888888888\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/order/payment_callback",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"payment_callback"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Order not use Shipper (Step 4.1.1)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "use_shipper",
											"value": "false",
											"description": "false  | true",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/accept_order/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"accept_order",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Awb Number (Step 4.1.2)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "no_awb",
											"value": "ASD123",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/awb_number/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"awb_number",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Order and Use Shipper (Step 4.2.1)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "use_shipper",
											"value": "true",
											"description": "false  | true",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/accept_order/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"accept_order",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Pickup Agent (Step 4.2.2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Find Pickup Agent\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    if (jsonData.id !== null) {\r",
											"        pm.environment.set('shipment_agent_id', jsonData.data.data[0].agent.id)\r",
											"        pm.environment.set('shipment_agent_name', jsonData.data.data[0].agent.name)\r",
											"        \r",
											"        pm.environment.set('shipment_city_id', jsonData.data.data[0].city.id)\r",
											"        pm.environment.set('shipment_city_name', jsonData.data.data[0].city.name)\r",
											"        \r",
											"        pm.environment.set('shipment_location_latitude', jsonData.data.data[0].location.latitude)\r",
											"        pm.environment.set('shipment_location_longitude', jsonData.data.data[0].location.longitude)\r",
											"        \r",
											"        pm.environment.set('shipment_contact_name', jsonData.data.data[0].contact.name)\r",
											"        pm.environment.set('shipment_contact_phone', jsonData.data.data[0].contact.phone)\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{base_url}}/admin/order/find_pickup_agent/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"find_pickup_agent",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request Pickup (Step 4.2.3)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "shipping[shipper_pickup_agent_id]",
											"value": "{{shipment_agent_id}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_agent_name]",
											"value": "{{shipment_agent_name}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_city_id]",
											"value": "{{shipment_city_id}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_city_name]",
											"value": "{{shipment_city_name}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_location_latitude]",
											"value": "{{shipment_location_latitude}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_location_longitude]",
											"value": "{{shipment_location_longitude}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_contact_name]",
											"value": "{{shipment_contact_name}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_contact_phone]",
											"value": "{{shipment_contact_phone}}",
											"type": "text"
										},
										{
											"key": "shipping[shipper_pickup_date]",
											"value": "2020-08-04 15:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order/request_pickup/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"request_pickup",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Done Order (Step 5a)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order/done/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"done",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Order (Step 5b)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"type": "text",
										"value": "{{secret_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order/cancel/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"cancel",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Track Order",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order/track/{{order_invoice_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order",
										"track",
										"{{order_invoice_number}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order Source",
					"item": [
						{
							"name": "List Order Source",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order_source?sorted=created_at.desc",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order_source"
									],
									"query": [
										{
											"key": "sorted",
											"value": "created_at.desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Order Source",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Bukalapak",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order_source",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order_source"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Order Source",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Whatsapp",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/order_source/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order_source",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Order Source",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order_source/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order_source",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Order Source",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/order_source/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"order_source",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "Wishlist",
					"item": [
						{
							"name": "List Wishlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/client/wishlist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"wishlist"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Wishlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Has id wishlist\", function () {",
											"    var jsonData = pm.response.json();",
											"    var id = parseInt(jsonData.data.id_wishlist);",
											"    pm.expect(id > 0).to.eql(true);",
											"});",
											"",
											"pm.test(\"Compare Fields\", function () {",
											"    var jsonData = pm.response.json();",
											"",
											"    var id_product = jsonData.data.product.id_product",
											"    var id_user = jsonData.data.user.id_auth_user",
											"    pm.expect(parseInt(id_product)).to.eql(1);",
											"    pm.expect(parseInt(id_user)).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/client/wishlist/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"wishlist",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Category",
					"item": [
						{
							"name": "List Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var data = pm.response.json();",
											"    pm.expect(data.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Data is array\", function () {",
											"    var data = pm.response.json();",
											"    data = data.data",
											"",
											"    var isObject = (typeof data === \"object\")",
											"    var hasLenght = data.hasOwnProperty('length')",
											"    ",
											"    pm.expect(isObject).to.eql(true);",
											"    pm.expect(hasLenght).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_item\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_item !== undefined).to.eql(true);",
											"});",
											"",
											"pm.test(\"Response has total_page\", function () {",
											"    var data = pm.response.json();",
											"    data = data.total_item !== undefined",
											"    pm.expect(typeof data.total_page !== undefined).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/client/category",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"category"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "Detail Product",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/product/{{product_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"product",
										"{{product_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Member",
					"item": [
						{
							"name": "Detail Member",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/client/member/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"member",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Member Address",
					"item": [
						{
							"name": "List Member Address",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/member_address",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"member_address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Store Member Address",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_member",
											"value": "1",
											"type": "text"
										},
										{
											"key": "province_id",
											"value": "6",
											"type": "text"
										},
										{
											"key": "province_name",
											"value": "DKI Jakarta",
											"type": "text"
										},
										{
											"key": "city_id",
											"value": "41",
											"type": "text"
										},
										{
											"key": "city_name",
											"value": "Jakarta Selatan",
											"type": "text"
										},
										{
											"key": "suburb_id",
											"value": "491",
											"type": "text"
										},
										{
											"key": "suburb_name",
											"value": "Kebayoran Baru",
											"type": "text"
										},
										{
											"key": "area_id",
											"value": "4761",
											"type": "text"
										},
										{
											"key": "area_name",
											"value": "Senayan - 12190",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Nama Saya",
											"type": "text"
										},
										{
											"key": "address",
											"value": "Jalan Panjang Sekali",
											"type": "text"
										},
										{
											"key": "receiver_name",
											"value": "Michael Chandra",
											"type": "text"
										},
										{
											"key": "receiver_phone",
											"value": "087824622895",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/member_address",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"member_address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Member Address",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/member_address/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"member_address",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Member Address By Member",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/member_address?id_member=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"member_address"
									],
									"query": [
										{
											"key": "id_member",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cart",
					"item": [
						{
							"name": "Store Cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code 200\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"cart_id\", jsonData.data.id_cart);",
											"    pm.expect(jsonData.code).to.eql(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "qty",
											"value": "1",
											"type": "text"
										},
										{
											"key": "id_product_detail",
											"value": "2",
											"type": "text"
										},
										{
											"key": "id_cart",
											"value": "{{cart_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/client/cart",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Detail Cart",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/client/cart/{{cart_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"cart",
										"{{cart_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Cart Item",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_product_detail",
											"value": "2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/client/cart/{{cart_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"cart",
										"{{cart_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order",
					"item": [
						{
							"name": "Store Order",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Token-Secret",
										"value": "{{secret_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "order_info[name]",
											"value": "nama lengkap",
											"type": "text"
										},
										{
											"key": "order_info[address]",
											"value": "address",
											"type": "text"
										},
										{
											"key": "order_info[phone]",
											"value": "1231321",
											"type": "text"
										},
										{
											"key": "id_cart",
											"value": "{{cart_id}}",
											"type": "text"
										},
										{
											"key": "id_auth_user",
											"value": "1",
											"type": "text"
										},
										{
											"key": "discount_noted[discount]",
											"value": "noted here",
											"type": "text"
										},
										{
											"key": "shipping_courier",
											"value": "jne",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/client/order",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"client",
										"order"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}